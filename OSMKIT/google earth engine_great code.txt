/**
 * Function to mask clouds using the Sentinel-2 QA band
 * @param {ee.Image} image Sentinel-2 image
 * @return {ee.Image} cloud masked Sentinel-2 image
 */
function maskS2clouds(image) {
  var qa = image.select('QA60');

  // Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = 9 << 10;
  var cirrusBitMask = 1 << 11;
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));

  return image.updateMask(mask).divide(10000);
}
var dataset = ee.ImageCollection('COPERNICUS/S2_SR')
                  .filterDate('2019-01-01', '2020-12-30')
                  // Pre-filter to get less cloudy granules.
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE',5))
                  .map(maskS2clouds);

var visualization = {
  min: 0.0,
  max: 0.3,
  bands: ['B4', 'B3', 'B2'],
};

//Map.setCenter(83.277, 17.7009, 12);
Map.addLayer(dataset.mean(), visualization, 'RGB');
var geometry = 
    ee.Geometry.Polygon(
        [[
          [121.40040954850953, 25.164405191440284],
          [121.40040954850953, 25.14692490019482],
          [121.4362438609485, 25.14692490019482],
          [121.4362438609485, 25.164405191440284]
          ]], null, false);


var imageRGB = dataset.mean().visualize({bands: ['B4', 'B3', 'B2'], min: 0, max: 0.3});
print('Multi-band GeoTIFF file',
  imageRGB.getDownloadURL({
    description: 'example_image_RGB',
    region: geometry,
    scale: 2,
    format: 'GEO_TIFF'
  }));
Export.image.toDrive({
  scale: 2,
  image: imageRGB,
  description: 'example_image_RGB',
  fileFormat: 'GeoTIFF',
  region: geometry});